name: Deploy Manor

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '20'

jobs:
  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest
    if: github.ref_name == 'main'
    environment: production
    
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHubActions-Deploy-Manor
          aws-region: us-east-1

      - name: Install dependencies (excluding iOS)
        run: |
          echo "üì¶ Installing dependencies excluding iOS package..."
          # Remove iOS package reference from package-lock.json temporarily
          if [ -f package-lock.json ]; then
            cp package-lock.json package-lock.json.backup
            # Remove iOS package entries from lockfile
            node -e "
              const fs = require('fs');
              const lockfile = JSON.parse(fs.readFileSync('package-lock.json', 'utf8'));
              if (lockfile.packages && lockfile.packages['packages/ios']) {
                delete lockfile.packages['packages/ios'];
              }
              if (lockfile.dependencies && lockfile.dependencies['@manor/ios']) {
                delete lockfile.dependencies['@manor/ios'];
              }
              fs.writeFileSync('package-lock.json', JSON.stringify(lockfile, null, 2));
            "
          fi
          # Install dependencies for specific workspaces
          npm install --workspace=@manor/cdk --workspace=@manor/website
          echo "‚úÖ Dependencies installed successfully"

      - name: Fix website rollup dependencies
        run: |
          echo "üîß Fixing rollup native dependencies for website..."
          cd packages/website
          
          # Remove existing problematic installations
          rm -rf node_modules package-lock.json
          
          # Install with flags to ensure optional dependencies are included
          npm install --include=optional --force
          
          # Explicitly install the missing rollup native binary
          npm install @rollup/rollup-linux-x64-gnu --save-dev --force || echo "Continuing without explicit rollup binary..."
          
          echo "‚úÖ Website dependencies fixed"

      - name: Build website with fixed dependencies
        run: |
          echo "üèóÔ∏è Building website with fixed rollup dependencies..."
          cd packages/website
          
          # Build the website for production
          npm run build:production
          
          echo "‚úÖ Website build completed"

      - name: Deploy to AWS
        run: |
          echo "üöÄ Deploying Manor to AWS..."
          # Use the fixed website dependencies for deployment
          npm run deploy --workspace=@manor/cdk
          echo "‚úÖ Deployment completed"
        env:
          CDK_DEFAULT_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}
          CDK_DEFAULT_REGION: us-east-1
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          SKIP_PREBUILD: true
