name: CI/CD Pipeline

on:
  push:
    branches: [ main, test-deploy ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '20'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test --if-present

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build packages
        run: npm run build

      - name: Test build (non-main branches)
        if: github.ref_name != 'main'
        run: |
          echo "ðŸ§ª Testing workflow on branch: ${{ github.ref_name }}"
          echo "âœ… Dependencies installed"
          echo "âœ… Build completed successfully"
          echo "ðŸš€ Would deploy to AWS on main branch"

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    if: github.ref_name == 'main'
    environment: production
    
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHubActions-Deploy-Manor
          aws-region: us-east-1

      - name: Install dependencies
        run: npm ci

      - name: Deploy to AWS
        run: npm run deploy
        env:
          CDK_DEFAULT_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}
          CDK_DEFAULT_REGION: us-east-1
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
